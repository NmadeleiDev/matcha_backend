version: '3'

services:
  main_backend:
    build:
      context: main_backend
    container_name: main_backend
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

      BACKEND_PORT: ${BACKEND_PORT}
      PROJECT_HOST: ${PROJECT_HOST}
      PROJECT_PORT: ${FRONT_PORT}

      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_ADDRESS: ${MONGO_ADDRESS}

      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}

      SERVICE_MAIL_ADDR: ${SERVICE_MAIL_ADDR}
      SERVICE_MAIL_PASSWD: ${SERVICE_MAIL_PASSWD}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    restart: always
    depends_on:
      - postgres
      - mongodb
    networks:
      - docker_net
      - mongo_net
      - postgres_net

  chat_backend:
    build:
#      context: chat_backend
      context: socket_backend
    container_name: chat_backend
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}

      BACKEND_PORT: ${CHAT_BACKEND_PORT}

      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWD: ${MONGO_PASSWORD}
      MONGO_ADDR: ${MONGO_ADDRESS}
    ports:
      - ${CHAT_BACKEND_PORT}:${CHAT_BACKEND_PORT}
    restart: always
    depends_on:
#      - redis
      - mongodb
    networks:
      - docker_net
      - mongo_net

  media_backend:
    build:
      context: media_backend
    container_name: media_backend
    volumes:
      - ./images:/app/storage
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_ADDRESS: ${MONGO_ADDRESS}
      MEDIA_SERVER_PORT: ${MEDIA_SERVER_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      STORAGE_PATH: ${STORAGE_PATH}
    ports:
      - ${MEDIA_SERVER_PORT}:${MEDIA_SERVER_PORT}
    restart: always
    networks:
      - mongo_net
      - postgres_net
      - docker_net
    depends_on:
      - mongodb
      - postgres

  mongodb:
    image: mongo:4.4.2
    hostname: mongodb-matcha
    container_name: mongodb-matcha
    command: mongod --port ${MONGO_PORT}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongo_net

  nginx_server:
    build:
      context: ./nginx
    ports:
      - ${FRONT_PORT}:80
    links:
      - main_backend
      - media_backend
    networks:
      - docker_net
    depends_on:
      - media_backend
      - main_backend

  postgres:
    image: postgres:9.6.17
    volumes:
      - ./data/pgsql:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres_net
    restart: on-failure

  redis:
    image: redis:6.0.9
    volumes:
      - ./data/redis:/data
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - docker_net
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "ffa9203c493aa99" ]
    restart: on-failure

networks:
  postgres_net:
    external: false
  mongo_net:
    external: false
  docker_net:
    external: false
