version: '3'

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      BACKEND_PORT: ${BACKEND_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_ADDRESS: ${MONGO_ADDRESS}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
      - mongodb
    networks:
      - docker_net
      - mongo_net
      - postgres_net

  mongodb:
    image: mongo:4.2.3
    hostname: mongodb
    container_name: mongodb
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongo_net

#  nginx_server:
#    build:
#      context: ./nginx
#    ports:
#      - 8080:80
#    links:
#      - backend
#    networks:
#      - docker_net

  postgres:
    image: postgres:9.6.17
    volumes:
      - ./data/pgsql:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres_net
    restart: on-failure

networks:
  postgres_net:
    external: false
  mongo_net:
    external: false
  docker_net:
    external: false